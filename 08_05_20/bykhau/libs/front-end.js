
//Программа Курса

let cour = [
    {
        lesson: 'Занятие 1', 
        title: 'Введение в JavaScript. Взаимодействие с пользователем. Ветвления и циклы',
        descr: `
        <li>1. Способы подключения скрипта. Структура кода. Режим "use strict". Константы, переменные и литералы. Ключевые слова let, const, var. Типы данных: число, строка, логический тип, значения "null" и "undefined", объекты и символы. Оператор typeof. Преобразования типов.</li>
        <li>2. Операторы и операнды. Унарный и бинарный операторы. Приоритет операторов. Присваивание. Инкремент/декремент. Операторы сравнения.</li>
        <li>3. Методы взаимодействия: alert, prompt, confirm, document.write. Условный оператор if и тернарный оператор '?'. Логические операторы. Конструкция "switch".</li>
        <li>4. Циклы for, while, do…while.</li>
        `,
    },
    {
        lesson: 'Занятие 2', 
        title: 'Редакторы кода. Консоль разработчика',
        descr: `
        <li>1. Редактор кода Visual Studio Code. Настройки редактора. Рабочая область редактора. Разделение экрана. Работа с проектами. Режим просмотра. Работа с терминалом. Базовые операции командной строки. Установка и настройка плагинов. Плагин быстрого набора кода Emmet.</li>
        <li>2. Консоль разработчика и отладка кода в браузере Chrome.</li>
        `,
    },
    {
        lesson: 'Занятие 3', 
        title: 'Функции',
        descr: `
        <li>1. Объявление функции: Function Declaration и Function Expression. Области видимости переменных: глобальные и локальные переменные. Параметры функции. Возврат значения. Рекурсия. Замыкания. Выбор названия функции. Принцип: одна функция – одно действие. Функции высшего порядка и callback-функции. Конструктор функций.</li>
        <li>2. Функции-стрелки. Многострочные стрелочные функции.</li>
        `,
    },
    {
        lesson: 'Занятие 4', 
        title: 'Массивы и методы массивов. Работа со строками',
        descr: `
        <li>1. Объявление массива. Внутреннее устройство и эффективность массива. Перебор элементов с помощью for, for…of и forEach. Свойство length. Отрицательные индексы. Многомерные массивы. Метод toString.</li>
        <li>2. Методы начала массива: shift, unshift. Методы конца массива: pop, push. Добавление, удаление и замена элементов массива – метод splice. Копирование элементов массива – методы slice, concat. Поиск в массиве – методы indexOf/lastIndexOf, includes, find и findIndex, filter.</li>
        <li>3. Преобразования и упорядочения массива – методы map, sort, reverse, split и join, reduce/reduceRight и др.</li>
        <li>4. Методы строки: indexOf, lastIndexOf, substring, escape, unescape, eval. Свойство length. Регулярные выражения.</li>
        `,
    },
    {
        lesson: 'Занятие 5', 
        title: 'Объекты',
        descr: `
        <li>1. Объекты JavaScript, объекты браузера и пользователя. Создание объектов. Свойства и методы объектов. Ключевое слово this. Операции с объектами. Доступ к свойству через точку, квадратные скобки, переменную. Вычисляемые свойства. Методы call, apply, bind.</li>
        <li>2. Объекты как ассоциативные массивы. Объявление объекта со свойствами: пары ключ-значение. Проверка существования свойства. Перебор и подсчет свойств: цикл for…in. Передача изменений по ссылке. Клонирование объектов. Метод delete. Сериализация объектов – методы JSON.stringify и JSON.parse.</li>
        <li>3. Объекты Number, String, Boolean и др. Методы объекта Math. Методы объекта Date.</li>
        <li>4. Модули в JavaScript. Директивы export и import.</li>
        `,
    },
    {
        lesson: 'Занятие 6', 
        title: 'Объектно-ориентированное программирование',
        descr: `
        <li>1. Классы. Функциональный и прототипный стили. Конструктор объектов. Внутренний (приватный) и внешний (публичный) интерфейсы. Наследование.</li>
        `,
    },
    {
        lesson: 'Занятие 7', 
        title: 'Браузерное окружение. DOM (Document Object Model) – объектная модель документа',
        descr: `
        <li>1. Программный интерфейс DOM. Методы поиска элементов HTML: по идентификатору – getElementById, по имени тега – getElementsByTagName, по имени класса – getElementsByClassName, по CSS селекторам – querySelectorAll, getComputedStyle и др.</li>
        <li>2. Методы изменения элементов HTML и CSS: внутреннего содержимого – innerHTML, значения атрибута – setAttribute, стиля элемента – style, cssText, classList и др. Принцип именования свойств CSS в JavaScript.</li>
        <li>3. Методы добавления и удаления элементов HTML: создание – createElement, удаление – removeChild, добавление – appendChild, замена – replaceChild и др.</li>
        <li>4. Навигация по узлам. Работа с узлами. Наборы элементов. Списки узлов.</li>
        <li>5. События и реагирования на события (обработчики событий). События объектов браузера. События мыши. Клавиатурные события и др. Атрибуты событий. События выбранного элемента. Метод addEventListener.</li>
        <li>6. Анимация в JavaScript: методы setInterval, setTimeout, clearInterval, clearTimeout.</li>
        `,
    },
    {
        lesson: 'Занятие 8', 
        title: 'Браузерное окружение. BOM (Browser Object Model) – объектная модель браузера',
        descr: `
        <li>1. Свойства/методы объектов window, document, screen, location, history, navigator, event.</li>
        <li>2. Выбор элементов по коллекции document: images, links, forms.</li>
        <li>3. Хранение пользовательской информации в веб-страницах – cookies.</li>
        `,
    },
    {
        lesson: 'Занятие 9', 
        title: 'Взаимодействие с сервером',
        descr: `
        <li>1. HTTP-запросы. JavaScript AJAX. JavaScript Object Notation (JSON).</li>
        <li>2. Серверная платформа JavaScript – Node.js.</li>
        `,
    },
    {
        lesson: 'Занятие 10', 
        title: 'HTML5 для JavaScript-разработчика',
        descr: `
        <li>1. Структура HTML-документа.</li>
        <li>2. Cписки, изображения, гиперссылки, цвета.</li>
        <li>3. Работа с таблицами и формами HTML.</li>
        <li>4. Вставка аудио и видеоматериалов HTML.</li>
        `,
    },
    {
        lesson: 'Занятие 11', 
        title: 'CSS3 для JavaScript-разработчика',
        descr: `
        <li>1. Способы подключения CSS. Синтаксис и элементы стилей.</li>
        <li>2. Виды селекторов: тега, класса, идентификатора, потомка, дочерний, братский, атрибута, псевдокласса, псевдоэлемента, структурных псевдоклассов, универсальный.</li>
        <li>3. Комбинирование и группирование селекторов, переменные в CSS.</li>
        <li>4. Наследование и каскадирование селекторов.</li>
        <li>5. Использование CSS-медиазапросов для адаптивного дизайна.</li>
        <li>6. Анимация и трансформация в CSS. Градиенты, рамки, тени, переходы, фильтры.</li>
        <li>7. Использование препроцессоров и постпроцессоров - вендорных префиксов. CSS-фреймворки.</li>
        `,
    },
    {
        lesson: 'Занятие 12', 
        title: ' Модели верстки web-приложений для JavaScript-разработчика',
        descr: `
        <li>1. Семантические элементы HTML5.</li>
        <li>2. Блочные элементы &lt;div&gt;. Строчные элементы &lt;span&gt;.</li>
        <li>3. Блочная модель: контейнеры и обертки. Свойства width, height, margin, border, padding. Тип контейнера элемента – свойство display. Область блочного элемента – свойство box-sizing. Позиционирование элементов - свойство position. Переполнение блочного элемента - свойство overflow. Наложение элементов - свойство z-index. Плавающие блоки - свойство float и clear. CSS-спрайты - свойство background-position.</li>
        <li>4. Компоновка элементов с помощью модели CSS Flexbox.</li>
        <li>5. Компоновка элементов с помощью модели CSS Grid.</li>
        `,
    },
    {
        lesson: 'Занятие 13', 
        title: 'Библиотека jQuery',
        descr: `
        <li>1. Быстрое получение и изменение атрибутов и содержимого элементов DOM.</li>
        <li>2. Добавление и удаление элементов.</li>
        <li>3. Управление событиями.</li>
        <li>4. Создание анимационных эффектов.</li>
        <li>5. Выполнение AJAX-запросов.</li>
        <li>6. Использование плагинов.</li>
        `,
    },
    {
        lesson: 'Занятие 14', 
        title: 'HTML5 JavaScript API (Application Programming Interface) - интерфейс прикладного программирования',
        descr: `
        <li>1. Понятие API. API браузера. Сторонние API.</li>
        <li>2. API форм (Form API). Интерфейс HTMLFormElement. Свойства элемента form - name, action, method, enctype. Методы form – submit, reset. Выбор формы по коллекции forms и по значению атрибута name. Выбор элементов по коллекции elements. Элементы <'input> с полем ввода текста. Проверка формы с помощью метода setCustomValidity(). Псевдоклассы :focus, :invalid, :valid, :required, :optional. Элементы <'input> с выбором значения. Валидация радиокнопок и чекбоксов. Другие элементы формы. События focus/blur.</li>
        <li>3. API перетаскивания (Drug&Drop API). События источника - dragstart, drag, dragend. События целевого элемента - dragenter, dragover, drop, dragleave. Примеры перетаскивания одного элемента в другой; полного перетаскивания; выбора источника для перетаскивания; выбора позиции относительно указателя мыши; перетаскивание файлов из внешних источников.</li>
        <li>4. API геолокации (Geolocation API). Определение и слежение за местоположением. Методы getCurrentPosition, watchPosition, clearWatch. Подключение Гугл-карт и Яндекс-карт.</li>
        <li>5. API Видео и аудио (Video and audio APIs). Свойства, методы и события для программирования интерактивного плейера.</li>
        <li>6. API web-хранилища (Web Storage API) - развитие технологии cookies.</li>
        <li>7. API холст (Canvas API). Создания графики с помощью JavaScript: цветной прямоугольник, линии и пути, квадратичная и кубическая кривые Безье, линейный и радиальный градиенты, работа с текстом, создание тени, вставка изображений (обычных, с измененными размерами, кадрированных, шаблоны изображений), трансформация элементов, сохранение и восстановление состояния настроек, наложения элементов. Обработка видео. Библиотеки для работы с графикой - Paper.JS, Fabric.JS, Kinetic.JS и др.</li>
        `,
    },
    {
        lesson: 'Занятие 15', 
        title: 'Введение в JavaScript-фреймворк Google Angular 2',
        descr: `
        <li>1. Установка фреймворка.</li>
        <li>2. Создание модуля.</li>
        <li>3. Создание компонента.</li>
        <li>4. Директивы в Angular 2.</li>
        <li>5. Привязка данных.</li>
        <li>6. Особенности языка TypeScript.</li>
        <li>7. Работа с формами.</li>
        `,
    },
    {
        lesson: 'Занятие 16', 
        title: 'Material Design в Angular 2. Создание приложения',
        descr: `
        <li>1. Установка и подключение Material Design.</li>
        <li>2. Создание панелей (toolbar).</li>
        <li>3. Создание спиннера.</li>
        <li>4. Создание кнопок и иконок.</li>
        <li>5. Создание меню.</li>
        <li>6. Создание карточки.</li>
        <li>7. Создание кнопки-переключателя c фильтрацией и др.</li>
        <li>8. Создание web-приложения в Angular 2: создание компонент, добавление интерактивных элементов, программирование взаимодействия.</li>
        `,
    },
];

let sc='';
for (i1=0; i1<cour.length; i1++) {
    
 sc += `<div>
 <span>${cour[i1].lesson}.</span>
        <span class="sec-2__title">${cour[i1].title}</span>
     </div>
 <div>
     <div class="sec-2__less-block">
         
    
      <div class="sec-2__content">
            <ol>
            ${cour[i1].descr}
            </ol>
        </div>
    </div>
 </div> ` ;


}

course.innerHTML = sc;


